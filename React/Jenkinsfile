pipeline {

  agent any

  tools {
    nodejs "node-14.17.5"
  }

  options {
    timeout(time: 15, unit: "MINUTES")
  }
  
  environment {
    LOCAL_HOME = "${PORTFOLIO_HOME}"
    CREDENTIALS = "${SERVER_CREDENTIALS}"
    USER = "${SERVER_USER}"
    HOST = "${SERVER_HOST}"
    SERVER_HOME = "${SERVER_HOME}"
    DEPLOY_DIR = "${DEPLOY_DIR}"
  }

  stages {
    
    stage("Install dependencies") {
      steps {
        sh "cd $LOCAL_HOME/React && npm i"
      }
    }
    stage("Build project") {
      steps {
        sh "cd $LOCAL_HOME/React && npm run build"
      }
    }

    stage("Build prod dist folder") {
      steps {
        sh "rm -rf $LOCAL_HOME/$DEPLOY_DIR"
        sh "cd $LOCAL_HOME && mkdir $DEPLOY_DIR"
        sh "cd $LOCAL_HOME/React && cp -r src/ ../$DEPLOY_DIR/src"
        sh "cd $LOCAL_HOME/React && cp ./package.json ../$DEPLOY_DIR"
        sh "cd $LOCAL_HOME/React && cp ./package-lock.json ../$DEPLOY_DIR"
        sh "bash $LOCAL_HOME/envGenerator.sh"
      }
    }
    
    stage("Build zip and send to server") {
      steps {
        sh "rm -rf $LOCAL_HOME/${DEPLOY_DIR}.zip"
        sh "cd $LOCAL_HOME && zip -r ${DEPLOY_DIR}.zip $DEPLOY_DIR/"
        sh "ssh -i $CREDENTIALS $USER@$HOST rm -rf $SERVER_HOME/${DEPLOY_DIR}.zip"
        sh "scp -i $CREDENTIALS $LOCAL_HOME/${DEPLOY_DIR}.zip $USER@$HOST:~/"
      }
    }

    stage("Deploy to server") {
      steps {
        sh "ssh -i $CREDENTIALS $USER@$HOST rm -rf $SERVER_HOME/$DEPLOY_DIR"
        sh "ssh -i $CREDENTIALS $USER@$HOST unzip $SERVER_HOME/${DEPLOY_DIR}.zip"
        sh "ssh -i $CREDENTIALS $USER@$HOST 'cd $SERVER_HOME/$DEPLOY_DIR && npm i'"
        sh "ssh -i $CREDENTIALS $USER@$HOST $SERVER_HOME/.nvm/versions/node/v14.17.5/bin/pm2 stop all"
        sh "ssh -i $CREDENTIALS $USER@$HOST npm run start:prod --prefix $SERVER_HOME/$DEPLOY_DIR"
        sh "ssh -i $CREDENTIALS $USER@$HOST rm -rf $SERVER_HOME/${DEPLOY_DIR}.zip"
      }
    }
  }
}